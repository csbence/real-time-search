group 'unh-ai'
version '1.0-SNAPSHOT'

apply plugin: 'application'
apply plugin: 'excelsiorJet'
apply plugin: 'kotlinx-serialization'
apply plugin: "org.jetbrains.kotlin.jvm"

applicationDefaultJvmArgs = [
        "-server", "-XX:+AggressiveOpts", "-ea", //"â€“XX:+UseG1GC",
        "-Xms10g",
        "-Xmx10g"
]

if (project.hasProperty("mainClass")) {
    mainClassName = mainClass
} else {
    mainClassName = "edu.unh.cs.ai.realtimesearch.RealTimeSearchKt"
}

buildscript {

    ext.kotlin_version = '1.2.60'
    ext.serialization_version = '0.6.1'

    repositories {
        mavenCentral()
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:$serialization_version"
        classpath 'com.excelsiorjet:excelsior-jet-gradle-plugin:1.1.2'
    }
}

repositories {
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

dependencies {
    compile group: 'com.carrotsearch', name: 'hppc', version: '0.5.0'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"

    compile 'commons-cli:commons-cli:1.3.1'

    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.slf4j:slf4j-nop:1.7.25'

    // https://mvnrepository.com/artifact/org.apache.thrift/libthrift
    compile group: 'org.apache.thrift', name: 'libthrift', version: '0.11.0'

    //compile files("libs/libthrift-1.0.0-SNAPSHOT.jar")

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}


sourceSets {
    main.java.srcDirs += file('src/main/kotlin')
    test.java.srcDirs += file('src/test/kotlin')
}

task plot(type: Exec) {
    workingDir 'scripts'
    commandLine 'python3', 'metronome_plot.py'
}

run {
    if (project.hasProperty("appArgs")) {
        args = Eval.me(appArgs)
    }
    standardInput = System.in
}

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

excelsiorJet {
    mainClass = mainClassName
}

task clientJar(type: Jar) {
    manifest {
        //noinspection GroovyAssignabilityCheck
        attributes 'Main-Class': 'edu.unh.cs.ai.realtimesearch.experiment.network.RealTimeSearchClientApplicationKt'
    }
    baseName = project.name + '-client'


    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}