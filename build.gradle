group 'unh-ai'
version '1.0-SNAPSHOT'

apply plugin: 'application'
apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: "org.jetbrains.kotlin.jvm"

applicationDefaultJvmArgs = [
        "-server", "-ea", //"â€“XX:+UseG1GC",
        "-Xms10g",
        "-Xmx10g"
]

if (project.hasProperty("mainClass")) {
    mainClassName = mainClass
} else {
    mainClassName = "edu.unh.cs.searkt.SearKt"
}

buildscript {

    ext.kotlin_version = '1.3.21'
    ext.serialization_version = '0.10.0'

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

repositories {
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

dependencies {
    compile group: 'com.carrotsearch', name: 'hppc', version: '0.5.0'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.4.2'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}


sourceSets {
    main.java.srcDirs += file('src/main/kotlin')
    test.java.srcDirs += file('src/test/kotlin')
}

task plot(type: Exec) {
    workingDir 'scripts'
    commandLine 'python3', 'metronome_plot.py'
}

run {
    if (project.hasProperty("appArgs")) {
        args = Eval.me(appArgs)
    }
    standardInput = System.in
}

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
